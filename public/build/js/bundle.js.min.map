{"version":3,"sources":["fiados/cargar-clientes.js","fiados/fiados.js","fiados/navFiados.js","cajas/cajas.js","categorias/categorias.js","inicio/index.js","clientes/clientes.js","mercado/infoVenta.js","mercado/mercadolibre.js","productos-ventas/index.js","usuarios/login.js","usuarios/usuario.js","proveedores/proveedores.js","productos/avastesimiento.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas-graficas.js","ventas/reporte-ventas.js","ventas/ventas.js","transacciones/egresos.js","transacciones/ingresos.js"],"names":["document","querySelector","selectClientes","async","respuesta","fetch","location","origin","resultado","json","opcionDisabled","createElement","textContent","value","appendChild","forEach","cliente","opcion","id","nombre","$","select2","theme","error","consultarCLientes","datosDeuda","monto","deuda","saldo","cliente_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","bodyPagos","totalDeuda","btnPagar","formulario","deudaActual","btnPagarTodo","saldoRestante","calcularSaldoRestante","isNaN","parseFloat","toLocaleString","consultarInfoCliente","limpiarHtml","fiados","length","Swal","fire","icon","text","pagos_cuotas","total_deuda","fiado","codigo","venta_id","total","recaudo","estado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","type","tdInfo","divInfo","btnInfo","innerHTML","onclick","modal","msg","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfo","mostrarFiados","pago","numero_pago","fecha_pago","tdNumeroPago","tdMonto","tdFecha","tdAcciones","divAcciones","btnEliminar","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","datos","FormData","append","url","method","body","eliminarToastAnterior","Toasts","class","title","console","log","setTimeout","eliminarPago","alertaEliminarPago","referencia","firstChild","removeChild","remove","addEventListener","e","valor","target","deudaSinFormat","replace","monto_ingresado","valor_sin_formato","formatearValor","on","reset","disabled","val","validator","setDefaults","submitHandler","enviarDatos","validate","rules","required","customValidation","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","removeClass","addMethod","param","notEqualChar","enlaceDeudas","enlacePagos","contenedorDeudas","contenedorPagos","querySelectorAll","dNone","btnAbrirCaja","btnSubmit","tablaCajas","efectivoAperturaInput","accionesModal","resetForm","destroy","find","llenarFormulario","consultarCaja","inicializarValidador","ajax","reload","efectivo_apertura","dataTable","fnDestroy","DataTable","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","deferRender","retrieve","proccesing","responsive","currentTarget","dataset","cajaId","parentElement","childNodes","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","event","tablaCategorias","btnRegistrarCategoria","categoria","consultarCategoria","trim","initComplete","fn","Buttons","buttons","container","appendTo","toUpperCase","categoriaId","eliminarCategoria","alertaEliminarCategoria","ingresos","ganancias","costos","inventario","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","mostrarInfo","cargarInformacion","tablaClientes","btnRegistrarCliente","cedula","celular","direccion","email","consultarCliente","minlength","digits","rangelength","clienteId","eliminarCliente","alertaEliminarCliente","productos_venta","venta","totalVentaSinComision","metodoVenta","estadoVenta","total_factura","metodo_pago","contains","mostrarInfoVenta","consultarInfoVenta","ventaId","tablaMercadoLibre","pagosAuto","tablaProductosVendidos","input_fecha_inicial","input_fecha_final","fecha_actual","Date","fecha_final","getFullYear","getMonth","slice","getDate","setMonth","fecha_inicial","consultarProductosVendidos","dataFilter","data","jsonData","JSON","parse","newJson","row","index","existe","indexProducto","parseInt","stringify","dataType","success","req","resposeText","inicializarValidadorStock","idProductoActualizarStock","nuevo_stock","precio_compra_nuevo","btnSubmitNewStock","formularioStock","enviarDatosStock","password","window","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","usuarioId","eliminarUsuario","alertaEliminarUsuario","tablaProveedores","btnRegistrarProvedor","proveedorId","proveedor","eliminarProveedor","alertaEliminarProveedor","nombre_producto","precio_paquete_nuevo","unidades_input_nuevo","calcularNuevoPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","tablaCompras","productoId","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","tablaProductos","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","selected","llenarSelectCategorias","consultarProveedores","proveedores","llenarSelectProveedores","consultarProducto","eliminarProducto","alertaEliminarProducto","idAnterior","listadoProductos","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","total_libre","focusCantidad","productosArray","guardarVentaBtn","totalInput","totalLibreInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoProducto","selectProductos","cargarCodigoVenta","codigo_venta","resetearCliente","trigger","mostrarProductos","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col7Div","group7Div","prepend7Div","inputStock","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col5Div","group5Div","prepend5Div","inputPrecioLibre","nuevo_precio_venta","col3Div","group3Div","prepend3Div","inputPrecio","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","consultarInfoProducto","some","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productoVenta","precio_factura","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","optionToSelect","llenarInformacion","consultarVenta","leerDatosUrl","preventDefault","miString","test","keyCode","productoSeleccionado","toLowerCase","productoPorCodigo","consultarProductos","valor_abono","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","mercadolibre","ventas","ingresos_totales","total_inventario","fecha_actual_utc","fecha_actual_formateada","getTime","toISOString","llenarIputFecha","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        // $('#selectClientes').on('select2:select', function (e) {\r\n        //     if (e.target.value != 0) {\r\n                \r\n        //         consultarInfoCliente(e.target.value);\r\n        //     } else {\r\n        //         resetearCliente();\r\n        //     }\r\n        // });\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado =  await respuesta.json();\r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n               \r\n        \r\n                \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                    \r\n   \r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                \r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            cliente_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n        const bodyPagos = document.querySelector('#body-pagos');\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        btnPagar.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        async function enviarDatos() {\r\n            const datos = new FormData();\r\n            datos.append('cliente_id', datosDeuda.cliente_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            if ($('#selectClientes').val() != 0) {\r\n                $('#modal-pago').modal('show');\r\n\r\n                deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n                saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n                inicializarValidador();\r\n\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Por favor seleccione un cliente',\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n                limpiarHtml(bodyPagos);\r\n                if (resultado.fiados.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { fiados, pagos_cuotas } = resultado;\r\n                    mostrarFiados(fiados);\r\n                    mostrarPagos(pagos_cuotas)\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function mostrarPagos(pagos) {\r\n\r\n\r\n            pagos.forEach(pago => {\r\n                const { numero_pago, monto, fecha_pago } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdNumeroPago = document.createElement('TD');\r\n                tdNumeroPago.textContent = '#' + numero_pago;\r\n\r\n                const tdMonto = document.createElement('TD');\r\n                tdMonto.textContent = '$' + parseFloat(monto).toLocaleString('en');\r\n\r\n                const tdFecha = document.createElement('TD');\r\n                tdFecha.textContent = fecha_pago;\r\n\r\n                const tdAcciones = document.createElement('TD');\r\n                const divAcciones = document.createElement('DIV');\r\n                divAcciones.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                // const btnInfo = document.createElement('BUTTON');\r\n                // btnInfo.type = 'button'\r\n                // btnInfo.classList.add('btn', 'btn-sm', 'mr-4', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                // btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                const btnEliminar = document.createElement('BUTTON');\r\n                btnEliminar.type = 'button'\r\n                btnEliminar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnEliminar.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnEliminar.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divAcciones.appendChild(btnInfo);\r\n                divAcciones.appendChild(btnEliminar);\r\n                tdAcciones.appendChild(divAcciones);\r\n\r\n                tr.appendChild(tdNumeroPago)\r\n                tr.appendChild(tdMonto)\r\n                tr.appendChild(tdFecha)\r\n\r\n                tr.appendChild(tdAcciones);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        function alertaEliminarPago(pago){\r\n            \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.monto)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n           \r\n            const datos = new FormData();\r\n            datos.append('numero_pago', pago.numero_pago);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n               \r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    console.log(resultado)\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(fiados) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            fiados.forEach(fiado => {\r\n                const { codigo, venta_id, total, recaudo, estado } = fiado;\r\n                if (estado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (estado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'ustify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver</span><i class=\"fas fa-search\"></i>';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfo(fiado);\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = fiado.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        async function consultarInfo(fiado) {\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta-id=${fiado.venta_id}`);\r\n                const resultado = await respuesta.json();\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n                    mostrarInfoFiado(fiado, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n   \r\n\r\n        const enlaceDeudas = document.querySelector('#enlace-deudas');\r\n        const enlacePagos = document.querySelector('#enlace-pagos');\r\n        const contenedorDeudas = document.querySelector('#contenedor-deudas');\r\n        const contenedorPagos = document.querySelector('#contenedor-pagos');\r\n\r\n        enlaceDeudas.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlaceDeudas.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorPagos.classList.add('d-none')\r\n       \r\n            \r\n          \r\n        })\r\n        enlacePagos.addEventListener('click',()=>{\r\n            const active = document.querySelector('.active-nav');\r\n            active.classList.remove('active-nav')\r\n            enlacePagos.classList.add('active-nav')\r\n\r\n            const dNones = document.querySelectorAll('.d-none');\r\n            dNones.forEach(dNone=>{\r\n                dNone.classList.remove('d-none')\r\n            })\r\n            contenedorDeudas.classList.add('d-none')\r\n         \r\n        })\r\n  \r\n    }\r\n})();","(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const inicio = document.querySelector('#inicio');\r\n    if(inicio){\r\n        const ingresos = document.querySelector('#inicio_ingresos')\r\n        const ganancias = document.querySelector('#inicio_ganancias')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        // const ingresos_reales = document.querySelector('#inicio_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#inicio_ganancias_reales')\r\n        // const dinero_fiados = document.querySelector('#inicio_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n        // const dinero_mercado_libre = document.querySelector('#inicio_dinero_mercado_libre')\r\n        // const dinero_pendiente_mercado_libre = document.querySelector('#inicio_dinero_pendiente_mercado_libre')\r\n        \r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado){\r\n      \r\n            ingresos.textContent = resultado.ingresos\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            // dinero_mercado_libre.textContent = resultado.dinero_mercado_libre\r\n            // dinero_pendiente_mercado_libre.textContent = resultado.dinero_pendiente_mercado_libre\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(){\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#mercadolibre');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercado Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if(mercadolibre){\r\n\r\n        let tablaMercadoLibre\r\n\r\n         pagosAuto();\r\n         mostrarVentas()\r\n\r\n        async function pagosAuto(){\r\n       \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-auto`);\r\n                // const resultado = await respuesta.json();\r\n        \r\n               \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        function mostrarVentas(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaMercadoLibre = $('#tabla').DataTable({\r\n                ajax: '/api/mercadolibre',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaMercadoLibre, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/mercadolibre',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n    }\r\n})();","(function () {\r\n    const productos_vendidos = document.querySelector('#productos-vendidos');\r\n    if (productos_vendidos) {\r\n\r\n        let tablaProductosVendidos;\r\n        const input_fecha_inicial = document.querySelector('#fecha-inicial');\r\n        const input_fecha_final = document.querySelector('#fecha-final');\r\n\r\n        const fecha_actual = new Date();\r\n\r\n\r\n        let fecha_final = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n        // Obtener la fecha actual restada un mes\r\n        fecha_actual.setMonth(fecha_actual.getMonth() - 1);\r\n        let fecha_inicial = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n\r\n\r\n        cargarInputs();\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\r\n            input_fecha_inicial.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n            input_fecha_final.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n\r\n            // consultarProductosVendidos();\r\n\r\n        });\r\n\r\n        function cargarInputs() {\r\n            input_fecha_inicial.value = fecha_inicial\r\n            input_fecha_final.value = fecha_final\r\n            consultarProductosVendidos()\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        function consultarProductosVendidos() {\r\n\r\n\r\n            const fechaObjeto_1 = new Date(fecha_inicial);\r\n            const fechaObjeto_2 = new Date(fecha_final);\r\n\r\n            if (fechaObjeto_1 >= fechaObjeto_2) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: \"Error\",\r\n                    text: \"La fecha inicial debe ser menor que la fecha final\",\r\n\r\n                });\r\n                return;\r\n            } else {\r\n                const datos = new FormData();\r\n                datos.append(\"fecha_inicial\", fecha_inicial);\r\n                datos.append(\"fecha_final\", fecha_final);\r\n\r\n                $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n                tablaProductosVendidos = $('#tabla').DataTable({\r\n                    ajax: {\r\n                        url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                        dataFilter: function (data) {\r\n                            const jsonData = JSON.parse(data);\r\n                            let newJson = [];\r\n                        \r\n                            const datos = jsonData.data;\r\n                            datos.forEach(function (row, index) {\r\n                              \r\n                                if (newJson.length > 0) {\r\n                                    let existe = false;\r\n                                    newJson.forEach((producto, indexProducto) => {\r\n                                            if(producto[1]==row[1]){\r\n                                                newJson[indexProducto][4] =  parseInt(newJson[indexProducto][4]) + parseInt(row[4]);\r\n                                                newJson[indexProducto][6] = parseInt(newJson[indexProducto][4])*parseInt(newJson[indexProducto][5])\r\n                                                existe = true;\r\n                                            }\r\n                                        }\r\n                                    )\r\n                                    if(existe == false){\r\n                                        newJson.push(row);\r\n                                    }\r\n                                } else {\r\n                                    newJson.push(row);\r\n                                }\r\n\r\n                               \r\n                            });\r\n                       \r\n\r\n                            return JSON.stringify({ data: newJson });\r\n                        }\r\n                    },\r\n                    \"deferRender\": true,\r\n                    \"retrieve\": true,\r\n                    \"proccesing\": true,\r\n                    responsive: true,\r\n                    initComplete: function () {\r\n                        // Inicializa los botones después de que la tabla se haya creado\r\n                        var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                            buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                        }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                    }\r\n                });\r\n                // tablaProductosVendidos = $('#tabla').DataTable({\r\n                //     ajax: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                //     \"deferRender\":true,\r\n                //     \"retrieve\":true,\r\n                //     \"proccesing\":true,\r\n                //     responsive:true,\r\n                //     initComplete: function () {\r\n                //         // Inicializa los botones después de que la tabla se haya creado\r\n                //         var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                //             buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                //         }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                //     }\r\n                // });\r\n                $.ajax({\r\n\r\n                    url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n\r\n                    dataType: 'json',\r\n                    success: function (req) {\r\n                         console.log(req)\r\n\r\n                    },\r\n                    error: function (error) {\r\n                        console.log(error.resposeText)\r\n                    }\r\n\r\n                })\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        function calcularNuevoPrecioCompra() {\r\n            precio_compra_nuevo.value = '';\r\n\r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if (isNaN(precio_paquete) || isNaN(unidades)) {\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete / unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        async function enviarDatosStock() {\r\n            const datos = new FormData();\r\n\r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n            btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                btnSubmitNewStock.disabled = false;\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatosStock()\r\n\r\n                }\r\n            });\r\n\r\n            $('#stockForm').validate({\r\n                rules: {\r\n\r\n\r\n                    nuevo_stock: {\r\n                        required: true\r\n                    },\r\n\r\n                    precio_compra_nuevo: {\r\n                        required: true\r\n                    }\r\n                },\r\n                messages: {\r\n                    nuevo_stock: {\r\n                        required: \"El nombre es obligatorio\"\r\n                    },\r\n                    precio_compra_nuevo: {\r\n                        required: 'la nueva cantidad adquirida es obligatoria'\r\n                    }\r\n\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        };\r\n        $('#stockForm').on('valid', function (event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function(){\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if(usuarios){\r\n\r\n        \r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n     \r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n    \r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click',function(){\r\n            id=null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        \r\n        mostrarUsuarios();\r\n\r\n       \r\n\r\n        function mostrarUsuarios(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                ajax: '/api/usuarios',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n             \r\n            });\r\n       \r\n        }  \r\n\r\n      \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario,e);\r\n        })\r\n\r\n      \r\n\r\n        function alertaEliminarUsuario(id, e){\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n             \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        \r\n        function accionesModal(){\r\n            $('#usuarioForm').validate().destroy(); \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n            \r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n            \r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n            \r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario(){\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n           \r\n            \r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n       \r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n       \r\n        }\r\n         \r\n     \r\n        async function enviarDatos(){\r\n          \r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n            \r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n                 \r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n      \r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia){\r\n            \r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n            \r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                        enviarDatos();\r\n                        \r\n\r\n                    \r\n              }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n        \r\n            if(!id){\r\n       \r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6   \r\n                }\r\n                passwordMsg = {\r\n                        required: \"El password es obligatorio\",\r\n                        minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n                \r\n            }\r\n    \r\n             $('#usuarioForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                },\r\n                email: {\r\n                  required: true\r\n                },\r\n                estado:{\r\n                    required: true,\r\n                },\r\n                roll:{\r\n                    required: true,\r\n                },\r\n                password: passwordRules,\r\n                terms: {\r\n                  required: true\r\n                },\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"\r\n                },\r\n                email: {\r\n                  required: \"El Usuario es obligatorio\"\r\n                },\r\n                estado:{\r\n                    required: 'el estado es obligatorio',\r\n                },\r\n                roll:{\r\n                    required: 'el Roll es obligatorio',\r\n                },\r\n                password: passwordMsg\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#usuarioForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const compras = document.querySelector('#compras');\r\n    if(compras){\r\n        let tablaProductosVendidos;\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n        consultarProductos();\r\n\r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n\r\n\r\n\r\n       \r\n        function consultarProductos(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCompras = $('#tabla').DataTable({\r\n                ajax: '/api/compras',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCompras, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n       \r\n       \r\n        }\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n            \r\n        })\r\n        porcentaje_venta.addEventListener('input',function(e){\r\n           calcularPrecioVenta(e.target.value);\r\n            \r\n            \r\n        })\r\n        precio_paquete_input.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input',function(e){\r\n            \r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra(){\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n            \r\n        }\r\n\r\n\r\n        function calcularPrecioVenta(porcentaje){\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n \r\n            if(isNaN(precio_compra)){\r\n                return;\r\n            }\r\n            const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        }\r\n        \r\n        function calcularPorcentaje(){\r\n            \r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if(isNaN(precio_compra) || isNaN(precio_venta)){\r\n                return;\r\n            }\r\n            const porcentaje = (precio_venta*100)/precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n       \r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n    if(productos){\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click',function(){\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click',function(){\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto,e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e){\r\n  \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProductos.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarProductos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/productos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n                \r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/productos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n        async function  consultarCategorias(){\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function  consultarProveedores(){\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n                \r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias){\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n            \r\n            categorias.forEach(categoria => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if(categoria.id == idCategoria){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n               \r\n        \r\n                selectCategorias.appendChild(opcion)\r\n        \r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n        \r\n        }\r\n        function llenarSelectProveedores(proveedores){\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n            \r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n                \r\n                const opcion =   document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if(proveedor.id == idProveedor){\r\n               \r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n        \r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n  \r\n         \r\n        }\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/producto/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n            \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarProducto();\r\n            }\r\n           \r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n        \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarProducto(){\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n         \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value =  (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n         \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#productoForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true\r\n                      \r\n                },\r\n               \r\n                stock: {\r\n                    required: true\r\n                },\r\n                stock_minimo: {\r\n                    required: true\r\n                },\r\n                precio_compra:{\r\n                    required: true\r\n                },\r\n                precio_venta:{\r\n                    required: true\r\n                },\r\n                porcentaje_venta:{\r\n                    required:true\r\n                }\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                stock: {\r\n                    required: 'El stock inicial es obligatorio'\r\n                },\r\n                stock_minimo: {\r\n                    required: 'El Stock mínimo es obligatorio'\r\n                },\r\n                precio_compra:{\r\n                    required: 'El precio de compra es obligatorio'\r\n                },\r\n                precio_venta:{\r\n                    required: 'El precio de venta es obligatorio'\r\n                },\r\n                porcentaje_venta:{\r\n                    required:'El porcentaje de venta es obligatorio'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#productoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n\r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '',\r\n            precio: '',\r\n            precio_original: '',\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: '',\r\n            total_libre: ''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n        let listadoProductos;\r\n\r\n\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        const totalLibreInput = document.querySelector('#total_libre');\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        const codigoProducto = document.querySelector('#codigo-producto');\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n        leerDatosUrl();\r\n        consultarProductos();\r\n\r\n        async function consultarProductos() {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado = await respuesta.json();\r\n                listadoProductos = resultado;\r\n                productoPorCodigo(listadoProductos);\r\n\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n\r\n\r\n                    selectProductos.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        function productoPorCodigo(listadoProductos) {\r\n\r\n            codigoProducto.addEventListener('input', function (e) {\r\n                e.preventDefault();\r\n\r\n                const miString = e.target.value\r\n\r\n                //const primerCaracter = miString.charAt(0);\r\n                const primerCaracter = miString\r\n\r\n                // Verificar si el primer carácter es un número\r\n                //if (!isNaN(parseInt(primerCaracter))) {\r\n                if (!(/[^0-9]/.test(primerCaracter))) {\r\n                    const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                        return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                    })\r\n\r\n\r\n                    if (productoSeleccionado.length > 0) {\r\n\r\n                        consultarInfoProducto(productoSeleccionado[0].id)\r\n                        e.target.value = '';\r\n                    }\r\n                } else {\r\n\r\n                    codigoProducto.addEventListener('keydown', (e) => {\r\n                        if (e.keyCode == 13) {\r\n                            const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                                return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                            })\r\n\r\n\r\n                            if (productoSeleccionado.length > 0) {\r\n\r\n                                consultarInfoProducto(productoSeleccionado[0].id)\r\n                                e.target.value = '';\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n\r\n\r\n\r\n            if (medotodoPago.value != 1) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n\r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        function llenarInformacion(resultado) {\r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio_factura,\r\n                    precio: productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio_factura * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total_factura).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2 || venta.metodo_pago == 3) {\r\n                let optionToSelect = '';\r\n\r\n                if (venta.metodo_pago == 2) {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                } else {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"3\"]');\r\n                }\r\n\r\n                optionToSelect.selected = true;\r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n         \r\n            if (medotodoPago.value == 2) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito o de mercado libre es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n\r\n\r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total_factura', valoresObj.total_pagar);\r\n            datos.append('total', valoresObj.total_libre);\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('estado', 0);\r\n                } else {\r\n                    datos.append('estado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('estado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n\r\n\r\n\r\n\r\n\r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                // return;\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n                <option value=\"3\">Mercado Libre</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, precio, cantidad, valor_total, stock } = producto;\r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-3');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                const col7Div = document.createElement('DIV');\r\n                col7Div.classList.add('col-sm-1');\r\n\r\n                const group7Div = document.createElement('DIV');\r\n                group7Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend7Div = document.createElement('DIV');\r\n                prepend7Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend7Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n                const inputStock = document.createElement('INPUT');\r\n                inputStock.type = 'text';\r\n                inputStock.classList.add('form-control');\r\n                inputStock.readOnly = true;\r\n                inputStock.value = stock;\r\n                inputStock.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n                group7Div.appendChild(prepend7Div);\r\n                group7Div.appendChild(inputStock);\r\n\r\n\r\n                col7Div.appendChild(group7Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio sin comision para cuando se usa mercado libre\r\n\r\n                const col5Div = document.createElement('DIV');\r\n                col5Div.classList.add('col-sm-2');\r\n                const group5Div = document.createElement('DIV');\r\n                group5Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend5Div = document.createElement('DIV');\r\n                prepend5Div.classList.add('input-group-prepend');\r\n                prepend5Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioLibre = document.createElement('INPUT');\r\n                inputPrecioLibre.type = 'text';\r\n                inputPrecioLibre.classList.add('form-control');\r\n                inputPrecioLibre.value = parseFloat(precio).toLocaleString('en');\r\n\r\n\r\n                group5Div.appendChild(prepend5Div);\r\n                group5Div.appendChild(inputPrecioLibre);\r\n                col5Div.appendChild(group5Div);\r\n\r\n                inputPrecioLibre.oninput = () => {\r\n\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecioLibre.value);\r\n                    inputPrecioLibre.value = nuevo_precio_venta;\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n\r\n                    total_libre = 0;\r\n                    productosArray.forEach(producto => {\r\n                        total_libre = total_libre + producto.precio * producto.cantidad;\r\n                    })\r\n                    valoresObj.total_libre = total_libre;\r\n                    totalLibreInput.value = total_libre.toLocaleString('en');\r\n                }\r\n\r\n\r\n\r\n                //precio unitario para factura\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-2');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n                inputPrecio.oninput = () => {\r\n\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    inputPrecioLibre.value = nuevo_precio_venta\r\n                    producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-2');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col7Div);\r\n                rowDiv.appendChild(col2Div);\r\n                rowDiv.appendChild(col5Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            let total_libre = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n                total_libre = total_libre + producto.cantidad * producto.precio;\r\n            })\r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n            totalInput.value = total.toLocaleString('en');\r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n            totalLibreInput.value = total_libre.toLocaleString('en');\r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n            valoresObj.total_libre = total_libre;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta,\r\n\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        precio: parseFloat(precio_venta),\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n\r\n\r\n\r\n\r\n                resultado.forEach(cliente => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n\r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    const ventas = document.querySelector('#ventas');\r\n    if (mercadolibre || ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n         \r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercad Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n  const reporte = document.querySelector('#reportes');\r\n  if (reporte) {\r\n\r\n    //mostrarGraficos();\r\n\r\n    function mostrarGraficos() {\r\n\r\n      var ticksStyle = {\r\n        fontColor: '#495057',\r\n        fontStyle: 'bold'\r\n      }\r\n\r\n      var mode = 'index'\r\n      var intersect = true\r\n\r\n\r\n      var $ultimo_year = $('#ultimo-year')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_year = new Chart($ultimo_year, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n          datasets: [\r\n            {\r\n              backgroundColor: '#007bff',\r\n              borderColor: '#007bff',\r\n              data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n            },\r\n            {\r\n              backgroundColor: '#ced4da',\r\n              borderColor: '#ced4da',\r\n              data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value) {\r\n                  if (value >= 1000) {\r\n                    value /= 1000\r\n                    value += 'k'\r\n                  }\r\n\r\n                  return '$' + value\r\n                }\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultima_semana = $('#ultima-semana')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultima_semana = new Chart($ultima_semana, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultimo_mes = $('#ultimo-mes')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_mes = new Chart($ultimo_mes, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n\r\n// lgtm [js/unused-local-variable]\r\n","(function(){\r\n\r\n  \r\n    const reporte = document.querySelector('#reporte');\r\n    if(reporte){\r\n        const ingresos = document.querySelector('#reporte_ingresos')\r\n        const ganancias = document.querySelector('#reporte_ganancias')\r\n        const costos = document.querySelector('#reporte_costos')\r\n        const inventario = document.querySelector('#reporte_inventario')\r\n        // const ingresos_reales = document.querySelector('#reporte_ingresos_reales')\r\n        // const ganancias_reales = document.querySelector('#reporte_ganancias_reales')\r\n        const dinero_fiados = document.querySelector('#reporte_dinero_fiados')\r\n        const numero_ventas = document.querySelector('#reporte_numero_ventas')\r\n        const numero_fiados = document.querySelector('#reporte_numero_fiados')\r\n        const numero_pagos = document.querySelector('#reporte_numero_pagos')\r\n        const numero_cajas = document.querySelector('#reporte_numero_cajas')\r\n        const numero_productos = document.querySelector('#reporte_numero_productos')\r\n        const numero_clientes = document.querySelector('#reporte_numero_clientes')\r\n\r\n        const fecha = document.querySelector('#fecha');\r\n        fecha.addEventListener('input',function(e){\r\n        \r\n            cargarInformacion(e.target.value);\r\n        })\r\n    \r\n\r\n        llenarIputFecha();\r\n\r\n        function llenarIputFecha(){\r\n            const fecha_actual_utc = new Date();\r\n\r\n            // Ajustar al huso horario de Colombia (UTC-5)\r\n            const fecha_actual_colombia = new Date(fecha_actual_utc.getTime() - (5 * 60 * 60 * 1000));\r\n        \r\n            // Formatear la fecha y asignarla al input\r\n            const fecha_actual_formateada = fecha_actual_colombia.toISOString().slice(0, 10);\r\n            fecha.value = fecha_actual_formateada;\r\n        \r\n            // Cargar información con la fecha ajustada\r\n            cargarInformacion(fecha.value);\r\n        }\r\n\r\n       \r\n\r\n        function mostrarInfo(resultado){\r\n   \r\n            ingresos.textContent = resultado.ingresos_totales\r\n            ganancias.textContent = resultado.ganancias\r\n            costos.textContent = resultado.costos\r\n            inventario.textContent = resultado.total_inventario\r\n            // ingresos_reales.textContent = resultado.ingresos_reales\r\n            // ganancias_reales.textContent = resultado.ganancias_reales\r\n            // dinero_fiados.textContent = resultado.fiados\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n            \r\n        }\r\n\r\n        async function cargarInformacion(fecha){\r\n\r\n            const datos = new FormData();\r\n            datos.append('fecha',fecha);\r\n            const url = `${location.origin}/api/info-general`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                // console.log(resultado);\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ventas = document.querySelector('#ventas');\r\n    if(ventas){\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.ventaId;\r\n         \r\n    \r\n            revisarPagosAsociados(id);\r\n\r\n      \r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            alertaEliminarVenta(ventaId,e);\r\n        })\r\n    \r\n\r\n        async function revisarPagosAsociados(id){\r\n    \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    method:'POST',\r\n                    body:datos\r\n                 })\r\n      \r\n                 const resultado = await respuesta.json();\r\n          \r\n                 eliminarToastAnterior();\r\n               \r\n                 if(resultado.type=='error'){\r\n                     $(document).Toasts('create', {\r\n                         class: 'bg-danger',\r\n                         title: 'Error',\r\n                      \r\n                         body: resultado.msg\r\n                       })\r\n                 }else{\r\n              \r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n                     \r\n                 }\r\n\r\n                 setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                 },8000)\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e){\r\n  \r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n          \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n         \r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaVentas.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        function mostrarVentas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaVentas = $('#tabla').DataTable({\r\n                ajax: '/api/ventas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n               \r\n            });\r\n \r\n            \r\n            // $.ajax({\r\n            //     url:'/api/ventas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , (descripcion.value).trim())\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();"]}